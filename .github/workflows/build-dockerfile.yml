on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: '.'
      platforms:
        required: false
        type: string
        default: 'linux/amd64'
      registry-host:
        required: true
        type: string
    secrets:
      registry-user:
        required: true
      registry-password:
        required: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Buildx Parameter Derivation
      id: parameter-derivation
      shell: bash
      run: |
        # build image tag
        TAG=$REF_NAME
        if [[ "$EVENT_NAME" == "pull_request" ]]; then
          TAG=$BASE_REF
        fi
        if [[ "$TAG" == "$DEFAULT_BRANCH" ]]; then
          TAG=latest
        fi
        TAG=$REGISTRY/$IMAGE_NAME:$TAG

        # determine if we should push the image
        PUSH=false
        if [[ "$EVENT_NAME" == "push" ]]; then
          if [[ "$REF_NAME" == "$DEFAULT_BRANCH" ]] || [[ $REF_TYPE == "tag" ]]; then
            PUSH=true
          fi
        fi

        # write outputs
        echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        echo "push=$PUSH" >> "$GITHUB_OUTPUT"
      env:
        REGISTRY: ${{ inputs.registry-host }}
        REF_NAME: ${{ github.ref_name }}
        REF_TYPE: ${{ github.ref_type }}
        BASE_REF: ${{ github.event.pull_request.base.ref }}
        EVENT_NAME: ${{ github.event_name }}
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        IMAGE_NAME: ${{ inputs.image-name }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      id: buildx-setup
      uses: docker/setup-buildx-action@v2
      with:
        use: false
        driver-opts: |
          network=host
    -
      name: Login to Docker Registry
      uses: docker/login-action@v2
      if: steps.parameter-derivation.outputs.push == 'true'
      with:
        registry: ${{ inputs.registry-host }}
        username: ${{ secrets.registry-user }}
        password: ${{ secrets.registry-password }}
    -
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        builder: ${{ steps.buildx-setup.outputs.name }}
        context: ${{ inputs.working-directory }}
        platforms: ${{ inputs.platforms }}
        push: ${{ steps.parameter-derivation.outputs.push }}
        tags: ${{ steps.parameter-derivation.outputs.tag }}
